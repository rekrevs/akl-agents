
set AGENTSEXE = "--AGENTSEXE--"
set AGENTSOBJ = "--AGENTSOBJ--"

set BOOT = --ENVIRONMENTDIR--/boot.pam
set COMP = --COMPILERDIR--/comp.pam
set VERS = "--VERSION--"
set BASICBOOT = "-b $BOOT -b $COMP -b $VERS"

set OUTPUT = ""
set AKLS = ""
set PAMS = ""
set OBJS = ""
set FOREIGNS = ""
set INSTALLS = ""

set TMP = /tmp
set TMPSTUB = $TMP/agents"$$"
set TMPAGENTS    = $TMPSTUB"agents"
set TMPAGENTSPAM = $TMPSTUB"agents.pam"
set TMPINSTALLC  = $TMPSTUB"install.c"

set AGENTS = "$AGENTSEXE $BASICBOOT"
set CC = "--CC--"
set CFLAGS = "--CFLAGS--"
set LDFLAGS = "--LDFLAGS--"

set AGENTSFLAGS = "--AGENTSFLAGS--"


if ($#argv == 0) then
  $AGENTS
  exit
endif


foreach ARG ($argv)
  if ($OUTPUT == pending) then
    set OUTPUT = $ARG
  else
    switch ($ARG)
      case -o*
	if ("$ARG" != "-o") then
	  echo "{WARNING: $ARG - ignoring, whitespace required after -o}"
	else
	  set OUTPUT = pending
	endif
	breaksw
      case -l*
	set OBJS = "$OBJS $ARG"
	breaksw
      case *.akl
	if ((-f $ARG) != 1) then
	  echo "{FATAL: $ARG - no such file}"
	  exit
	endif
	set NEWER =`find $ARG:r.pam -newer $ARG -print >&! /dev/null`
	if ((-f $ARG:r.pam) && $NEWER != "") then
	  set AKLS = "$AKLS '$ARG:r',"
	else
	  echo "{WARNING: $ARG - not compiling, .pam file is newer}"
	endif
	set PAMS = "$PAMS $ARG:r.pam"
	breaksw
      case *.pam
	if ((-f $ARG) != 1) then
	  echo "{FATAL: $ARG - no such file}"
	  exit
	endif
	set PAMS = "$PAMS $ARG"
	breaksw
      case *.fd
	if ((-f $ARG) != 1) then
	  echo "{FATAL: $ARG - no such file}"
	  exit
	endif
	set NAME = $ARG:r; set NAME = $NAME:t
	set NEWER = `find $ARG.c -newer $ARG -print >&! /dev/null`
	if ((-f $ARG.c) && $NEWER != "") then
	  echo "{WARNING: $ARG - not compiling, .fd.c file is newer}"
	else
	  set FOREIGNS = "$FOREIGNS file('$ARG','$ARG.c','$NAME'),"
	endif
	set INSTALLS = "$INSTALLS install_foreign_$NAME();"
	set OBJS = "$OBJS $ARG.c"
	breaksw
      case *.c
	if ((-f $ARG) != 1) then
	  echo "{FATAL: $ARG - no such file}"
	  exit
	endif
	set NEWER = `find $ARG:r.o -newer $ARG -print >&! /dev/null`
	if ((-f $ARG:r.o) && $NEWER != "") then
	  echo "{WARNING: $ARG - not compiling, .o file is newer}"
	  set OBJS = "$OBJS $ARG:r.o"
	else
	  set OBJS = "$OBJS $ARG"
	endif
	breaksw
      case *.o
	if ((-f $ARG) != 1) then
	  echo "{FATAL: $ARG - no such file}"
	  exit
	endif
	set OBJS = "$OBJS $ARG"
	breaksw
##    case -tcov
##	set AGENTSEXE = --EMULATORDIR--/tcovagents
##	set AGENTSOBJ = --EMULATORDIR--/tcovagents.o
##	breaksw
##    case -e
##	set AGENTSEXE = --EMULATORDIR--/eagents
##	set AGENTSOBJ = --EMULATORDIR--/eagents.o
##	breaksw
##    case -t
##	set AGENTSEXE = --EMULATORDIR--/tagents
##	set AGENTSOBJ = --EMULATORDIR--/tagents.o
##	breaksw
      default:
	echo "{WARNING: $ARG - ignoring, unrecognized}"
    endsw
  endif
end


# Missing output file?

if ($OUTPUT == pending) then
  echo "{FATAL: no output file after -o}"
  exit
endif


# Compile AKL files.

if ("$AKLS" != "") then
  echo "compilef([$AKLS []])." | $AGENTS
  if ($status != 0) then
    echo "{FATAL: $AKLS - failed to compile}"
    exit
  endif
endif


# Generate glue code from foreign declarations.

if ("$FOREIGNS" != "") then
  echo "foreign_interface([$FOREIGNS []])." | $AGENTS >&! /dev/null
  if ($status != 0) then
    echo "{FATAL: $FOREIGNS - failed to parse}"
    exit
  endif
endif


# Compile C files and link.

if ("$INSTALLS" != "") then
  echo "void install_foreign_predicates() {$INSTALLS}" >! $TMPINSTALLC
  $CC $CFLAGS $AGENTSFLAGS $TMPINSTALLC $OBJS $AGENTSOBJ $LDFLAGS -o $TMPAGENTS
  if ($status != 0) then
    echo -n "{FATAL: $CC $CFLAGS $AGENTSFLAGS $TMPINSTALLC $OBJS $AGENTSOBJ"
    echo    " $LDFLAGS -o $TMPAGENTS - failed to compile}"
    exit
  else
    set AGENTSEXE = $TMPAGENTS
  endif
  rm -f $TMPINSTALLC
endif


# Run or save output.

if ((-f $AGENTSEXE) != 1) then
##if ($AGENTSEXE == --EMULATORDIR--/tcovagents) then
##  echo "{FATAL: $AGENTSEXE - no such file (do make make-tcovagents)}"
##else if ($AGENTSEXE == --EMULATORDIR--/eagents) then
##  echo "{FATAL: $AGENTSEXE - no such file (do make eagents)}"
##else if ($AGENTSEXE == --EMULATORDIR--/tagents) then
##  echo "{FATAL: $AGENTSEXE - no such file (do make tagents)}"
##else
    echo "{FATAL: $AGENTSEXE - no such file}"
##endif
  exit
endif
if ($OUTPUT == "") then
  if ("$PAMS" != "") then
    cat $PAMS > $TMPAGENTS.pam
    $AGENTSEXE -b $TMPAGENTSPAM
    rm -f $TMPAGENTSPAM
  else
    $AGENTSEXE $BASICBOOT
  endif
else
  rm -f $OUTPUT.exe $OUTPUT.pam $OUTPUT
  cp $AGENTSEXE $OUTPUT.exe
  if ("$PAMS" != "") then
    cat $PAMS > $OUTPUT.pam
    echo exec `pwd`/$OUTPUT.exe -b `pwd`/$OUTPUT.pam '"$@"' > $OUTPUT
  else
    echo exec `pwd`/$OUTPUT.exe $BASICBOOT '"$@"' > $OUTPUT
  endif
  chmod +x $OUTPUT	  
endif


# Clean up.
rm -f $TMPAGENTS
exit
