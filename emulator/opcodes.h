/* $Id: opcodes.h,v 1.10 1994/03/29 18:08:13 jm Exp $ */

Item(SWITCH_ON_TERM)
    
Item(TRY_SINGLE)
Item(TRY)
Item(RETRY)
Item(TRUST)
    
Item(GUARD_UNORDER)
Item(GUARD_ORDER)     
Item(GUARD_UNIT)

Item(GUARD_COND)
Item(GUARD_CUT)
Item(GUARD_COMMIT)
Item(GUARD_WAIT)

Item(GUARD_HALT)
    
Item(ALLOCATE)
Item(DEALLOCATE)
Item(CALL)
Item(EXECUTE)
Item(DEALLOC_EXECUTE)
Item(PROCEED)
Item(DEALLOC_PROCEED)
Item(META_CALL)
Item(CALL_APPLY)
Item(EXECUTE_APPLY)
Item(DEALLOC_EXECUTE_APPLY)
Item(EXECUTE_APPLY_LIST)
     
Item(FAIL)
    
Item(GET_X_VARIABLE)
Item(GET_Y_VARIABLE)
Item(GET2_Y_VARIABLE)
Item(GET3_Y_VARIABLE)
Item(GET4_Y_VARIABLE)
Item(GET5_Y_VARIABLE)
Item(GET_X_VALUE)
Item(GET_Y_VALUE)
Item(GET_CONSTANT)
Item(GET_NIL)
Item(GET_STRUCTURE)
Item(GET_LIST)
Item(GET_LIST_X0)
Item(GET_NIL_X0)
Item(GET_STRUCTURE_X0)
Item(GET_CONSTANT_X0)
Item(GET_ABSTRACTION)
     
Item(PUT_X_VOID)
Item(PUT_Y_VOID)
Item(PUT_X_VARIABLE)
Item(PUT_Y_VARIABLE)
Item(PUT_X_VALUE)
Item(PUT_Y_VALUE)
Item(PUT2_Y_VALUE)
Item(PUT3_Y_VALUE)
Item(PUT4_Y_VALUE)
Item(PUT5_Y_VALUE)
Item(PUT_CONSTANT)
Item(PUT_NIL)
Item(PUT_STRUCTURE)
Item(PUT_LIST)
Item(PUT_ABSTRACTION)
     
Item(UNIFY_VOID)
Item(UNIFY_Y_VARIABLE)
Item(UNIFY_X_VARIABLE)
Item(UNIFY_X_VALUE)
Item(UNIFY_Y_VALUE)
Item(UNIFY_CONSTANT)
Item(UNIFY_NIL)
Item(UNIFY_LIST)
Item(UNIFY_STRUCTURE)
    
Item(SWITCH_ON_CONSTANT)
Item(SWITCH_ON_STRUCTURE)

Item(SEND3)

Item(SUSPEND_FLAT)

#ifdef BAM
/* New codes */

/* Special */

Item(FAIL_DEC)

/* Load */

Item(LOAD_NIL)
Item(LOAD_ATOM)
Item(LOAD_INTEGER)

/* Read */

Item(READ_CAR)
Item(READ_CDR)
Item(READ_ARG)

/* Move */

Item(SET_REG_REG)
Item(SET_REG_YVAR)
Item(SET_YVAR_REG)

/* Type switch */

Item(TERM_SWITCH)

/* Atoms */

Item(ATOM_SWITCH)
Item(ATOM_WITH_ELSE_SWITCH)
Item(ATOM_WITH_ATOM_ELSE_SWITCH)
Item(ATOM_TYPE)
Item(ATOM_TYPE_WITH_ELSE)
Item(KNOWN_ATOM_SWITCH)
Item(KNOWN_ATOM_WITH_ATOM_ELSE_SWITCH)

/* Integers */

Item(INTEGER_SWITCH)
Item(INTEGER_WITH_ELSE_SWITCH)
Item(INTEGER_WITH_INTEGER_ELSE_SWITCH)
Item(INTEGER_TYPE)
Item(INTEGER_TYPE_WITH_ELSE)
Item(KNOWN_INTEGER_SWITCH)
Item(KNOWN_INTEGER_WITH_INTEGER_ELSE_SWITCH)

/* List */

Item(LIST_SWITCH)
Item(LIST_TYPE_WITH_ELSE)

/* Structure */

Item(STRUCT_TYPE)
Item(STRUCT_TYPE_WITH_ELSE)
Item(KNOWN_FUNCTOR_SWITCH)
Item(KNOWN_FUNCTOR_WITH_FUNCTOR_ELSE_SWITCH)

/* Builtins -- static */

Item(INT_COMPARE_REG_REG)
Item(INT_COMPARE_REG_INT)

/* Builtins -- dynamic */

Item(EQ_REG_REG)

/* Unification -- no write jump */

Item(MATCH_REG_REG)
Item(MATCH_REG_REG_OFF)
Item(MATCH_REG_ATOM)
Item(MATCH_REG_OFF_ATOM)
Item(MATCH_REG_INTEGER)
Item(MATCH_REG_OFF_INTEGER)
Item(MATCH_REG_NIL)
Item(MATCH_REG_OFF_NIL)
Item(MATCH_REG_YVAR)
Item(MATCH_YVAR_YVAR)
Item(MATCH_YVAR_REG_OFF)

/* Unification -- H match */

Item(MATCH_REG_H_LIST)
Item(MATCH_YVAR_H_LIST)
Item(MATCH_REG_H_STRUCT)
Item(MATCH_YVAR_H_STRUCT)

/* Unification -- write jump */

Item(MATCH_REG_STRUCT)
Item(MATCH_REG_STRUCT_LEVEL)
Item(MATCH_REG_OFF_STRUCT)
Item(MATCH_REG_OFF_STRUCT_LEVEL)
Item(MATCH_YVAR_STRUCT)
Item(MATCH_YVAR_STRUCT_LEVEL)

Item(MATCH_REG_LIST_CAR)
Item(MATCH_REG_LIST_CAR_LEVEL)
Item(MATCH_REG_OFF_LIST_CAR)
Item(MATCH_REG_OFF_LIST_CAR_LEVEL)
Item(MATCH_YVAR_LIST_CAR)
Item(MATCH_YVAR_LIST_CAR_LEVEL)

Item(MATCH_REG_LIST_CDR)
Item(MATCH_REG_LIST_CDR_LEVEL)
Item(MATCH_REG_OFF_LIST_CDR)
Item(MATCH_REG_OFF_LIST_CDR_LEVEL)
Item(MATCH_YVAR_LIST_CDR)
Item(MATCH_YVAR_LIST_CDR_LEVEL)

/* Push */

Item(PUSH_LIST_IMM)
Item(PUSH_LIST)
Item(PUSH_STRUCTURE_IMM)
Item(PUSH_STRUCTURE)
Item(PUSH_NIL)
Item(PUSH_REG)
Item(PUSH_YVAR)
Item(PUSH_VOID)
Item(SET_REG_H_AND_PUSH_VOID)
Item(SET_YVAR_H_AND_PUSH_VOID)
Item(SET_REG_AND_YVAR_H_AND_PUSH_VOID)
Item(PUSH_ATOM)
Item(PUSH_INTEGER)
Item(PUSH_FUNCTOR)

Item(SET_REG_H)
Item(SET_YVAR_H)

/* Try */

Item(BTRY)
Item(BTRUST)
Item(TEST_TRY)
Item(TEST_TRUST)
Item(S_TRY)
Item(S_TRUST)
Item(BACK)
Item(GEN_TRY)
Item(GEN_TRUST)

/* Control */

Item(BEXECUTE_SIMPLE)
Item(BEXECUTE)
Item(BCALL)
Item(JUMP_GC_AND_DUMP_CONT)
Item(JUMP_GC)
Item(JUMP)
Item(BPROCEED_SIMPLE)
Item(BPROCEED)
Item(CREATE_CONT)
Item(TEST_LEVEL)

/* Constraint stack */

Item(CONSTRAINT_STACK_TEST)
Item(JUMP_ON_NONEMPTY_CONSTRAINT_STACK)
Item(ALIAS_CHECK)
Item(ALIAS_CHECK_REG)
Item(FAIL_ON_ALIAS)

/* Choice */

Item(CHOICE_QUIET_CUT)

/* Suspension */

Item(SUSPEND_LONE_VAR)
Item(BSUSPEND)
Item(SUSPEND_WITHOUT_REG)

/* Guard */

Item(CREATE_GUARD)

Item(FLAT_QUIET_CUT)
Item(FLAT_QUIET_COMMIT)
Item(FLAT_NOISY_WAIT)

Item(SHORTCUT_QUIET_CUT)
Item(SHORTCUT_QUIET_COMMIT)
Item(SHORTCUT_NOISY_WAIT)

Item(DEEP_QUIET_CUT)
Item(DEEP_QUIET_COMMIT)
Item(DEEP_NOISY_WAIT)

#endif
