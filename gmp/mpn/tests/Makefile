# Makefile.in generated automatically by automake 1.4a from Makefile.am

# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

SHELL = /bin/sh

srcdir = .
top_srcdir = ../..
prefix = /usr/local
exec_prefix = ${prefix}

bindir = ${exec_prefix}/bin
sbindir = ${exec_prefix}/sbin
libexecdir = ${exec_prefix}/libexec
datadir = ${prefix}/share
sysconfdir = ${prefix}/etc
sharedstatedir = ${prefix}/com
localstatedir = ${prefix}/var
libdir = ${exec_prefix}/lib
infodir = ${prefix}/info
mandir = ${prefix}/man
includedir = ${prefix}/include
oldincludedir = /usr/include

DESTDIR =

pkgdatadir = $(datadir)/gmp
pkglibdir = $(libdir)/gmp
pkgincludedir = $(includedir)/gmp

top_builddir = ../..

ACLOCAL = ${SHELL} /home/sverker/agents/gmp/missing --run aclocal
AUTOCONF = ${SHELL} /home/sverker/agents/gmp/missing --run autoconf
AUTOMAKE = ${SHELL} /home/sverker/agents/gmp/missing --run automake
AUTOHEADER = ${SHELL} /home/sverker/agents/gmp/missing --run autoheader

INSTALL = /usr/gnu/bin/install -c
INSTALL_PROGRAM = ${INSTALL}
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_FLAG =
transform = s,x,x,

NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :


build_alias = sparcv9-sun-solaris2.7
build_triplet = sparcv9-sun-solaris2.7
host_alias = sparcv9-sun-solaris2.7
host_triplet = sparcv9-sun-solaris2.7
target_alias = sparcv9-sun-solaris2.7
target_triplet = sparcv9-sun-solaris2.7
AMDEP = 
AMTAR = ${SHELL} /home/sverker/agents/gmp/missing --run tar
AR = ar
AS = @AS@
AWK = gawk
CALLING_CONVENTIONS_OBJS = 
CC = gcc
CCAS = gcc -c
CPP = gcc -E
CXX = @CXX@
CXXCPP = @CXXCPP@
DEPDIR = .deps
DLLTOOL = @DLLTOOL@
EXEEXT = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
M4 = m4
MAINT = #
MAKEINFO = ${SHELL} /home/sverker/agents/gmp/missing --run makeinfo
OBJDUMP = @OBJDUMP@
OBJEXT = o
PACKAGE = gmp
RANLIB = ranlib
SPEED_CYCLECOUNTER_OBJS = sparcv9.lo
STRIP = strip
U = 
VERSION = 3.1.1
gmp_srclinks =  mpn/inlines.c mpn/add_n.asm mpn/sub_n.asm mpn/mul_1.asm mpn/addmul_1.asm mpn/submul_1.asm mpn/lshift.asm mpn/rshift.asm mpn/diveby3.c mpn/divrem.c mpn/divrem_1.c mpn/divrem_2.c mpn/mod_1.c mpn/mod_1_rs.c mpn/pre_mod_1.c mpn/dump.c mpn/mul.c mpn/mul_fft.c mpn/mul_n.c mpn/mul_basecase.c mpn/sqr_basecase.c mpn/random.c mpn/random2.c mpn/sqrtrem.c mpn/get_str.c mpn/set_str.c mpn/scan0.c mpn/scan1.c mpn/popcount.c mpn/hamdist.c mpn/cmp.c mpn/perfsqr.c mpn/bdivmod.c mpn/gcd_1.c mpn/gcd.c mpn/gcdext.c mpn/tdiv_qr.c mpn/bz_divrem_n.c mpn/sb_divrem_mn.c mpn/jacbase.c gmp-mparam.h
install_sh = ./install-sh
mpn_objects =  inlines.lo add_n.lo sub_n.lo mul_1.lo addmul_1.lo submul_1.lo lshift.lo rshift.lo diveby3.lo divrem.lo divrem_1.lo divrem_2.lo mod_1.lo mod_1_rs.lo pre_mod_1.lo dump.lo mul.lo mul_fft.lo mul_n.lo mul_basecase.lo sqr_basecase.lo random.lo random2.lo sqrtrem.lo get_str.lo set_str.lo scan0.lo scan1.lo popcount.lo hamdist.lo cmp.lo perfsqr.lo bdivmod.lo gcd_1.lo gcd.lo gcdext.lo tdiv_qr.lo bz_divrem_n.lo sb_divrem_mn.lo jacbase.lo
mpn_objs_in_libgmp = mpn/mp_bases.lo mpn/inlines.lo mpn/add_n.lo mpn/sub_n.lo mpn/mul_1.lo mpn/addmul_1.lo mpn/submul_1.lo mpn/lshift.lo mpn/rshift.lo mpn/diveby3.lo mpn/divrem.lo mpn/divrem_1.lo mpn/divrem_2.lo mpn/mod_1.lo mpn/mod_1_rs.lo mpn/pre_mod_1.lo mpn/dump.lo mpn/mul.lo mpn/mul_fft.lo mpn/mul_n.lo mpn/mul_basecase.lo mpn/sqr_basecase.lo mpn/random.lo mpn/random2.lo mpn/sqrtrem.lo mpn/get_str.lo mpn/set_str.lo mpn/scan0.lo mpn/scan1.lo mpn/popcount.lo mpn/hamdist.lo mpn/cmp.lo mpn/perfsqr.lo mpn/bdivmod.lo mpn/gcd_1.lo mpn/gcd.lo mpn/gcdext.lo mpn/tdiv_qr.lo mpn/bz_divrem_n.lo mpn/sb_divrem_mn.lo mpn/jacbase.lo

# Copyright (C) 2000 Free Software Foundation, Inc.
#
# This file is part of the GNU MP Library.
#
# The GNU MP Library is free software; you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation; either version 2.1 of the License, or (at your
# option) any later version.
#
# The GNU MP Library is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
# License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with the GNU MP Library; see the file COPYING.LIB.  If not, write to
# the Free Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
# MA 02111-1307, USA.


AUTOMAKE_OPTIONS = gnu $(top_builddir)/ansi2knr no-dependencies

INCLUDES = -I$(top_srcdir)
LDADD = $(top_builddir)/libgmp.la

EXTRA_PROGRAMS = \
  add_n addmul_1 copy divmod_1 divrem lshift mul_1 rshift \
  sub_n submul_1 tst-addsub try


# addsub_n addsub_n_2 not yet built since mpn_addsub_n doesn't yet exist

EXTRA_HEADERS = ref.h try.h
EXTRA_DIST = x86call.asm x86check.c

try_SOURCES = try.c ref.c trace.c spinner.c
try_LDADD =  $(top_builddir)/libgmp.la
try_DEPENDENCIES = $(try_LDADD)

CLEANFILES = $(EXTRA_PROGRAMS)

SUFFIXES = .asm
subdir = mpn/tests
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = ../../config.h
CONFIG_CLEAN_FILES = 
EXTRA_PROGRAMS =  add_n$(EXEEXT) addmul_1$(EXEEXT) copy$(EXEEXT) \
divmod_1$(EXEEXT) divrem$(EXEEXT) lshift$(EXEEXT) mul_1$(EXEEXT) \
rshift$(EXEEXT) sub_n$(EXEEXT) submul_1$(EXEEXT) tst-addsub$(EXEEXT) \
try$(EXEEXT)

DEFS = -DHAVE_CONFIG_H -I. -I$(srcdir) -I../..
CPPFLAGS = 
LDFLAGS = 
LIBS = 
ANSI2KNR = $(top_builddir)/ansi2knr
add_n_SOURCES = add_n.c
add_n_OBJECTS =  add_n$U.$(OBJEXT)
add_n_LDADD = $(LDADD)
add_n_DEPENDENCIES =  $(top_builddir)/libgmp.la
add_n_LDFLAGS = 
addmul_1_SOURCES = addmul_1.c
addmul_1_OBJECTS =  addmul_1$U.$(OBJEXT)
addmul_1_LDADD = $(LDADD)
addmul_1_DEPENDENCIES =  $(top_builddir)/libgmp.la
addmul_1_LDFLAGS = 
copy_SOURCES = copy.c
copy_OBJECTS =  copy$U.$(OBJEXT)
copy_LDADD = $(LDADD)
copy_DEPENDENCIES =  $(top_builddir)/libgmp.la
copy_LDFLAGS = 
divmod_1_SOURCES = divmod_1.c
divmod_1_OBJECTS =  divmod_1$U.$(OBJEXT)
divmod_1_LDADD = $(LDADD)
divmod_1_DEPENDENCIES =  $(top_builddir)/libgmp.la
divmod_1_LDFLAGS = 
divrem_SOURCES = divrem.c
divrem_OBJECTS =  divrem$U.$(OBJEXT)
divrem_LDADD = $(LDADD)
divrem_DEPENDENCIES =  $(top_builddir)/libgmp.la
divrem_LDFLAGS = 
lshift_SOURCES = lshift.c
lshift_OBJECTS =  lshift$U.$(OBJEXT)
lshift_LDADD = $(LDADD)
lshift_DEPENDENCIES =  $(top_builddir)/libgmp.la
lshift_LDFLAGS = 
mul_1_SOURCES = mul_1.c
mul_1_OBJECTS =  mul_1$U.$(OBJEXT)
mul_1_LDADD = $(LDADD)
mul_1_DEPENDENCIES =  $(top_builddir)/libgmp.la
mul_1_LDFLAGS = 
rshift_SOURCES = rshift.c
rshift_OBJECTS =  rshift$U.$(OBJEXT)
rshift_LDADD = $(LDADD)
rshift_DEPENDENCIES =  $(top_builddir)/libgmp.la
rshift_LDFLAGS = 
sub_n_SOURCES = sub_n.c
sub_n_OBJECTS =  sub_n$U.$(OBJEXT)
sub_n_LDADD = $(LDADD)
sub_n_DEPENDENCIES =  $(top_builddir)/libgmp.la
sub_n_LDFLAGS = 
submul_1_SOURCES = submul_1.c
submul_1_OBJECTS =  submul_1$U.$(OBJEXT)
submul_1_LDADD = $(LDADD)
submul_1_DEPENDENCIES =  $(top_builddir)/libgmp.la
submul_1_LDFLAGS = 
am_try_OBJECTS =  try$U.$(OBJEXT) ref$U.$(OBJEXT) trace$U.$(OBJEXT) \
spinner$U.$(OBJEXT)
try_OBJECTS =  $(am_try_OBJECTS)
try_LDFLAGS = 
tst_addsub_SOURCES = tst-addsub.c
tst_addsub_OBJECTS =  tst-addsub$U.$(OBJEXT)
tst_addsub_LDADD = $(LDADD)
tst_addsub_DEPENDENCIES =  $(top_builddir)/libgmp.la
tst_addsub_LDFLAGS = 
COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CFLAGS = -g -O2 -Wa,-xarch=v8plus -mcpu=v9
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES =  add_n.c addmul_1.c copy.c divmod_1.c divrem.c lshift.c \
mul_1.c rshift.c sub_n.c submul_1.c $(try_SOURCES) tst-addsub.c
DIST_COMMON =  README $(EXTRA_HEADERS) Makefile.am Makefile.in


DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

GZIP_ENV = --best
depcomp = 
SOURCES = add_n.c addmul_1.c copy.c divmod_1.c divrem.c lshift.c mul_1.c rshift.c sub_n.c submul_1.c $(try_SOURCES) tst-addsub.c
OBJECTS = add_n$U.$(OBJEXT) addmul_1$U.$(OBJEXT) copy$U.$(OBJEXT) divmod_1$U.$(OBJEXT) divrem$U.$(OBJEXT) lshift$U.$(OBJEXT) mul_1$U.$(OBJEXT) rshift$U.$(OBJEXT) sub_n$U.$(OBJEXT) submul_1$U.$(OBJEXT) $(am_try_OBJECTS) tst-addsub$U.$(OBJEXT)

all: all-redirect
.SUFFIXES:
.SUFFIXES: .asm .c .lo .o .obj
$(srcdir)/Makefile.in: # Makefile.am $(top_srcdir)/configure.in $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOMAKE) --gnu mpn/tests/Makefile

Makefile: $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) \
	  && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status


mostlyclean-compile:
	-rm -f *.o core *.core
	-rm -f *.$(OBJEXT)

clean-compile:

distclean-compile:
	-rm -f *.tab.c

maintainer-clean-compile:

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:

maintainer-clean-libtool:
$(top_builddir)/ansi2knr: $(top_builddir)/ansi2knr.$(OBJEXT)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) ansi2knr

$(top_builddir)/ansi2knr.$(OBJEXT):
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) ansi2knr.$(OBJEXT)


mostlyclean-kr:
	-rm -f *_.c

clean-kr:

distclean-kr:

maintainer-clean-kr:

add_n$(EXEEXT): $(add_n_OBJECTS) $(add_n_DEPENDENCIES)
	@rm -f add_n$(EXEEXT)
	$(LINK) $(add_n_LDFLAGS) $(add_n_OBJECTS) $(add_n_LDADD) $(LIBS)

addmul_1$(EXEEXT): $(addmul_1_OBJECTS) $(addmul_1_DEPENDENCIES)
	@rm -f addmul_1$(EXEEXT)
	$(LINK) $(addmul_1_LDFLAGS) $(addmul_1_OBJECTS) $(addmul_1_LDADD) $(LIBS)

copy$(EXEEXT): $(copy_OBJECTS) $(copy_DEPENDENCIES)
	@rm -f copy$(EXEEXT)
	$(LINK) $(copy_LDFLAGS) $(copy_OBJECTS) $(copy_LDADD) $(LIBS)

divmod_1$(EXEEXT): $(divmod_1_OBJECTS) $(divmod_1_DEPENDENCIES)
	@rm -f divmod_1$(EXEEXT)
	$(LINK) $(divmod_1_LDFLAGS) $(divmod_1_OBJECTS) $(divmod_1_LDADD) $(LIBS)

divrem$(EXEEXT): $(divrem_OBJECTS) $(divrem_DEPENDENCIES)
	@rm -f divrem$(EXEEXT)
	$(LINK) $(divrem_LDFLAGS) $(divrem_OBJECTS) $(divrem_LDADD) $(LIBS)

lshift$(EXEEXT): $(lshift_OBJECTS) $(lshift_DEPENDENCIES)
	@rm -f lshift$(EXEEXT)
	$(LINK) $(lshift_LDFLAGS) $(lshift_OBJECTS) $(lshift_LDADD) $(LIBS)

mul_1$(EXEEXT): $(mul_1_OBJECTS) $(mul_1_DEPENDENCIES)
	@rm -f mul_1$(EXEEXT)
	$(LINK) $(mul_1_LDFLAGS) $(mul_1_OBJECTS) $(mul_1_LDADD) $(LIBS)

rshift$(EXEEXT): $(rshift_OBJECTS) $(rshift_DEPENDENCIES)
	@rm -f rshift$(EXEEXT)
	$(LINK) $(rshift_LDFLAGS) $(rshift_OBJECTS) $(rshift_LDADD) $(LIBS)

sub_n$(EXEEXT): $(sub_n_OBJECTS) $(sub_n_DEPENDENCIES)
	@rm -f sub_n$(EXEEXT)
	$(LINK) $(sub_n_LDFLAGS) $(sub_n_OBJECTS) $(sub_n_LDADD) $(LIBS)

submul_1$(EXEEXT): $(submul_1_OBJECTS) $(submul_1_DEPENDENCIES)
	@rm -f submul_1$(EXEEXT)
	$(LINK) $(submul_1_LDFLAGS) $(submul_1_OBJECTS) $(submul_1_LDADD) $(LIBS)

try$(EXEEXT): $(try_OBJECTS) $(try_DEPENDENCIES)
	@rm -f try$(EXEEXT)
	$(LINK) $(try_LDFLAGS) $(try_OBJECTS) $(try_LDADD) $(LIBS)

tst-addsub$(EXEEXT): $(tst_addsub_OBJECTS) $(tst_addsub_DEPENDENCIES)
	@rm -f tst-addsub$(EXEEXT)
	$(LINK) $(tst_addsub_LDFLAGS) $(tst_addsub_OBJECTS) $(tst_addsub_LDADD) $(LIBS)
.c.o:
	$(COMPILE) -c $<
.c.obj:
	$(COMPILE) -c `cygpath -w $<`
.c.lo:
	$(LTCOMPILE) -c -o $@ $<
add_n_.c: add_n.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/add_n.c; then echo $(srcdir)/add_n.c; else echo add_n.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > add_n_.c
addmul_1_.c: addmul_1.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/addmul_1.c; then echo $(srcdir)/addmul_1.c; else echo addmul_1.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > addmul_1_.c
copy_.c: copy.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/copy.c; then echo $(srcdir)/copy.c; else echo copy.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > copy_.c
divmod_1_.c: divmod_1.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/divmod_1.c; then echo $(srcdir)/divmod_1.c; else echo divmod_1.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > divmod_1_.c
divrem_.c: divrem.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/divrem.c; then echo $(srcdir)/divrem.c; else echo divrem.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > divrem_.c
lshift_.c: lshift.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/lshift.c; then echo $(srcdir)/lshift.c; else echo lshift.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > lshift_.c
mul_1_.c: mul_1.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/mul_1.c; then echo $(srcdir)/mul_1.c; else echo mul_1.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > mul_1_.c
ref_.c: ref.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/ref.c; then echo $(srcdir)/ref.c; else echo ref.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > ref_.c
rshift_.c: rshift.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/rshift.c; then echo $(srcdir)/rshift.c; else echo rshift.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > rshift_.c
spinner_.c: spinner.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/spinner.c; then echo $(srcdir)/spinner.c; else echo spinner.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > spinner_.c
sub_n_.c: sub_n.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/sub_n.c; then echo $(srcdir)/sub_n.c; else echo sub_n.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > sub_n_.c
submul_1_.c: submul_1.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/submul_1.c; then echo $(srcdir)/submul_1.c; else echo submul_1.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > submul_1_.c
trace_.c: trace.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/trace.c; then echo $(srcdir)/trace.c; else echo trace.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > trace_.c
try_.c: try.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/try.c; then echo $(srcdir)/try.c; else echo try.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > try_.c
tst-addsub_.c: tst-addsub.c $(ANSI2KNR)
	$(CPP) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) `if test -f $(srcdir)/tst-addsub.c; then echo $(srcdir)/tst-addsub.c; else echo tst-addsub.c; fi` | sed 's/^# \([0-9]\)/#line \1/' | $(ANSI2KNR) > tst-addsub_.c
add_n_.$(OBJEXT) add_n_.lo addmul_1_.$(OBJEXT) addmul_1_.lo \
copy_.$(OBJEXT) copy_.lo divmod_1_.$(OBJEXT) divmod_1_.lo \
divrem_.$(OBJEXT) divrem_.lo lshift_.$(OBJEXT) lshift_.lo \
mul_1_.$(OBJEXT) mul_1_.lo ref_.$(OBJEXT) ref_.lo rshift_.$(OBJEXT) \
rshift_.lo spinner_.$(OBJEXT) spinner_.lo sub_n_.$(OBJEXT) sub_n_.lo \
submul_1_.$(OBJEXT) submul_1_.lo trace_.$(OBJEXT) trace_.lo \
try_.$(OBJEXT) try_.lo tst-addsub_.$(OBJEXT) tst-addsub_.lo : \
$(ANSI2KNR)

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -f$$here/ID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || etags $(ETAGS_ARGS) $$tags  $$unique $(LISP)

mostlyclean-tags:

clean-tags:

distclean-tags:
	-rm -f TAGS ID

maintainer-clean-tags:

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  if test -d $$d/$$file; then \
	    cp -pR $$d/$$file $(distdir); \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file || :; \
	  fi; \
	done
info-am:
info: info-am
dvi-am:
dvi: dvi-am
check-am: all-am
check: check-am
installcheck-am:
installcheck: installcheck-am
install-exec-am:
install-exec: install-exec-am

install-data-am:
install-data: install-data-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install: install-am
uninstall-am:
uninstall: uninstall-am
all-am: Makefile
all-redirect: all-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_STRIP_FLAG=-s install
installdirs:


mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)
	-rm -f config.cache config.log stamp-h stamp-h[0-9]*

maintainer-clean-generic:
	-rm -f Makefile.in
mostlyclean-am:  mostlyclean-compile mostlyclean-libtool mostlyclean-kr \
		mostlyclean-tags mostlyclean-generic

mostlyclean: mostlyclean-am

clean-am:  clean-compile clean-libtool clean-kr clean-tags clean-generic \
		mostlyclean-am

clean: clean-am

distclean-am:  distclean-compile distclean-libtool distclean-kr \
		distclean-tags distclean-generic clean-am
	-rm -f libtool

distclean: distclean-am

maintainer-clean-am:  maintainer-clean-compile maintainer-clean-libtool \
		maintainer-clean-kr maintainer-clean-tags \
		maintainer-clean-generic distclean-am
	@echo "This command is intended for maintainers to use;"
	@echo "it deletes files that may require special tools to rebuild."

maintainer-clean: maintainer-clean-am

.PHONY: mostlyclean-compile distclean-compile clean-compile \
maintainer-clean-compile mostlyclean-libtool distclean-libtool \
clean-libtool maintainer-clean-libtool mostlyclean-kr distclean-kr \
clean-kr maintainer-clean-kr tags mostlyclean-tags distclean-tags \
clean-tags maintainer-clean-tags distdir info-am info dvi-am dvi check \
check-am installcheck-am installcheck install-exec-am install-exec \
install-data-am install-data install-am install uninstall-am uninstall \
all-redirect all-am all install-strip installdirs mostlyclean-generic \
distclean-generic clean-generic maintainer-clean-generic clean \
mostlyclean distclean maintainer-clean


allprogs: $(EXTRA_PROGRAMS)

# Relative paths don't work out right when running m4 from a second level
# subdirectory, so copy the necessary files up to build them.
.asm.o:
	cp $< ..; cd ..; $(MAKE) $(AM_MAKEFLAGS) $@; rm $*.asm; mv $*.* tests;
.asm.obj:
	cp $< ..; cd ..; $(MAKE) $(AM_MAKEFLAGS) $@; rm $*.asm; mv $*.* tests;
.asm.lo:
	cp $< ..; cd ..; $(MAKE) $(AM_MAKEFLAGS) $@; rm $*.asm; mv $*.* tests;

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
